/*
 *  Copyright (C) 2010 nickapos
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * AboutWindow.java
 * This class will create a window with a text area and depending on the need
 * will present in the text are a message, be it an about or a readme.
 * Created on 11 Αυγ 2010, 9:51:33 μμ
 */
package gr.oncrete.nick.myCrop.UserInterface;

import gr.oncrete.nick.myCrop.BusinessLogic.InsertNutrientType;
import gr.oncrete.nick.myCrop.BusinessLogic.NutrientType;
import gr.oncrete.nick.myCrop.BusinessLogic.CropType;
import gr.oncrete.nick.myCrop.BusinessLogic.SelectInfo.SelectNutrientTypeDetails;
import gr.oncrete.nick.myCrop.BusinessLogic.DeleteNutrientType;
import gr.oncrete.nick.myCrop.BusinessLogic.UpdateInfo.UpdateNutrientTypeRecord;
import gr.oncrete.nick.myCrop.BusinessLogic.InsertFertRecipy;
import gr.oncrete.nick.myCrop.BusinessLogic.SelectInfo.SelectCropTypeDetails;
import gr.oncrete.nick.myCrop.BusinessLogic.NutrientTypeForSpecificCrop;
import gr.oncrete.nick.myCrop.BusinessLogic.SelectInfo.SelectFertRecipyDetails;
import gr.oncrete.nick.myCrop.BusinessLogic.SelectInfo.SelectNutrientTypeDetails;
import gr.oncrete.nick.myCrop.BusinessLogic.DeleteFertRecipy;
import gr.oncrete.nick.myCrop.BusinessLogic.UpdateInfo.UpdateFertRecipyRecord;

/**
 *
 * @author nickapos
 */
public class RecipiesWindow extends javax.swing.JFrame {

    /** Creates new form AboutWindow */
    public RecipiesWindow() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        recipyActionComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cropTypeComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        nutTypeComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        quantityTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        observationsScrollPane = new javax.swing.JScrollPane();
        nutTypeObservationsTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        executeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("gr/oncrete/nick/myCrop/UserInterface/Bundle"); // NOI18N
        setTitle(bundle.getString("RecipiesWindow.title")); // NOI18N
        getContentPane().setLayout(new java.awt.FlowLayout());

        jPanel1.setLayout(new java.awt.GridLayout(6, 2));

        jLabel2.setText(bundle.getString("RecipiesWindow.jLabel2.text")); // NOI18N
        jPanel1.add(jLabel2);

        recipyActionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Insert", "Edit", "Delete" }));
        recipyActionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recipyActionComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(recipyActionComboBox);

        jLabel5.setText(bundle.getString("RecipiesWindow.jLabel5.text")); // NOI18N
        jPanel1.add(jLabel5);

        cropTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(this.getCropTypeCombo()));
        cropTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cropTypeComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(cropTypeComboBox);

        jLabel4.setText(bundle.getString("RecipiesWindow.jLabel4.text")); // NOI18N
        jPanel1.add(jLabel4);

        nutTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(this.getNutTypesCombo()));
        nutTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nutTypeComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(nutTypeComboBox);

        jLabel7.setText(bundle.getString("RecipiesWindow.jLabel7.text")); // NOI18N
        jPanel1.add(jLabel7);

        quantityTextField.setText(bundle.getString("RecipiesWindow.quantityTextField.text")); // NOI18N
        jPanel1.add(quantityTextField);

        jLabel1.setText(bundle.getString("RecipiesWindow.jLabel1.text")); // NOI18N
        jPanel1.add(jLabel1);

        nutTypeObservationsTextArea.setColumns(20);
        nutTypeObservationsTextArea.setRows(5);
        observationsScrollPane.setViewportView(nutTypeObservationsTextArea);

        jPanel1.add(observationsScrollPane);

        jLabel3.setText(bundle.getString("RecipiesWindow.jLabel3.text")); // NOI18N
        jPanel1.add(jLabel3);

        executeButton.setText(bundle.getString("RecipiesWindow.executeButton.text")); // NOI18N
        executeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeButtonActionPerformed(evt);
            }
        });
        jPanel1.add(executeButton);

        getContentPane().add(jPanel1);

        getAccessibleContext().setAccessibleName(bundle.getString("NutrientTypesWindow.AccessibleContext.accessibleName")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void executeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeButtonActionPerformed
        int a = recipyActionComboBox.getSelectedIndex();
        if (a == 0)//if selected action is insert
        {
            String ctypeName = (String) cropTypeComboBox.getSelectedItem();
            String nutTypeName = (String) nutTypeComboBox.getSelectedItem();
            String quantity = quantityTextField.getText();
            String observations = nutTypeObservationsTextArea.getText();
            InsertFertRecipy i = new InsertFertRecipy();
            i.insertFrecipyWithNames(ctypeName, nutTypeName, quantity, observations);

            this.clearTextFields();

        } else if (a == 1)//if selected action is edit
        {
            String cropTypeName = (String) cropTypeComboBox.getSelectedItem();
            SelectCropTypeDetails ctd = new SelectCropTypeDetails();
            ctd.SelectCropTypeDetailsWithName(cropTypeName);
            String nutTypeName = (String) nutTypeComboBox.getSelectedItem();
            SelectNutrientTypeDetails ntd = new SelectNutrientTypeDetails();
            ntd.SelectNutrientTypeDetailsWithName(nutTypeName);
            SelectFertRecipyDetails frtrcp = new SelectFertRecipyDetails();
            frtrcp.SelectNutrientTypeDetailsWithCIDandNUTID(ctd.getID(), ntd.getID());
            String frid = frtrcp.getFrid();

            String newQuantity = quantityTextField.getText();
            String newOb = nutTypeObservationsTextArea.getText();

            UpdateFertRecipyRecord u = new UpdateFertRecipyRecord(frid, ctd.getID(), ntd.getID(), newQuantity, newOb);
            this.clearTextFields();



        } else if (a == 2)//if selected action is delete
        {
            String cropTypeName = (String) cropTypeComboBox.getSelectedItem();
            SelectCropTypeDetails ctd = new SelectCropTypeDetails();
            ctd.SelectCropTypeDetailsWithName(cropTypeName);
            String nutTypeName = (String) nutTypeComboBox.getSelectedItem();
            SelectNutrientTypeDetails ntd = new SelectNutrientTypeDetails();
            ntd.SelectNutrientTypeDetailsWithName(nutTypeName);
            SelectFertRecipyDetails frtrcp = new SelectFertRecipyDetails();
            frtrcp.SelectNutrientTypeDetailsWithCIDandNUTID(ctd.getID(), ntd.getID());
            if (frtrcp.resultsExist()) {
                DeleteFertRecipy dfr = new DeleteFertRecipy(frtrcp.getFrid());
            }
            this.refreshCropTypeCombo();
            this.clearTextFields();
        }


    }//GEN-LAST:event_executeButtonActionPerformed

    private void recipyActionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recipyActionComboBoxActionPerformed
        int a = recipyActionComboBox.getSelectedIndex();
        if (a == 0)//if selected action is insert
        {
            this.refreshCropTypeCombo();
            this.refreshNutTypeCombo();
        } else if (a == 1)//if selected action is edit
        {
        } else if (a == 2)//if selected action is delete
        {
        }
    }//GEN-LAST:event_recipyActionComboBoxActionPerformed

    private void nutTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nutTypeComboBoxActionPerformed
        int a = recipyActionComboBox.getSelectedIndex();
        if (a == 1 || a == 2) {
            String cropTypeName = (String) cropTypeComboBox.getSelectedItem();
            SelectCropTypeDetails ctd = new SelectCropTypeDetails();
            ctd.SelectCropTypeDetailsWithName(cropTypeName);
            String nutTypeName = (String) nutTypeComboBox.getSelectedItem();
            SelectNutrientTypeDetails ntd = new SelectNutrientTypeDetails();
            ntd.SelectNutrientTypeDetailsWithName(nutTypeName);
            SelectFertRecipyDetails frtrcp = new SelectFertRecipyDetails();
            frtrcp.SelectNutrientTypeDetailsWithCIDandNUTID(ctd.getID(), ntd.getID());
            quantityTextField.setText(frtrcp.getQuantity());
            nutTypeObservationsTextArea.setText(frtrcp.getObservations());
        }
    }//GEN-LAST:event_nutTypeComboBoxActionPerformed

    private void cropTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cropTypeComboBoxActionPerformed
        int a = recipyActionComboBox.getSelectedIndex();
        if (a == 1 || a == 2)//if action is edit or delete search what nutrient types exist for this specific croptype
        {
            String cropTypeName = (String) cropTypeComboBox.getSelectedItem();
            SelectCropTypeDetails ctd = new SelectCropTypeDetails();
            ctd.SelectCropTypeDetailsWithName(cropTypeName);
            String ctdID = ctd.getID();
            NutrientTypeForSpecificCrop nt = new NutrientTypeForSpecificCrop(ctdID);
            nutTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(nt.names()));

        }
    }//GEN-LAST:event_cropTypeComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new RecipiesWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cropTypeComboBox;
    private javax.swing.JButton executeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox nutTypeComboBox;
    private javax.swing.JTextArea nutTypeObservationsTextArea;
    private javax.swing.JScrollPane observationsScrollPane;
    private javax.swing.JTextField quantityTextField;
    private javax.swing.JComboBox recipyActionComboBox;
    // End of variables declaration//GEN-END:variables

    private String[] getNutTypesCombo() {
        NutrientType nt = new NutrientType();
        return nt.names();
    }

    private String[] getCropTypeCombo() {
        CropType cr = new CropType();
        return cr.names();
    }

    private void clearTextFields() {
        quantityTextField.setText("");
        nutTypeObservationsTextArea.setText("");
    }

    private void refreshNutTypeCombo() {
        nutTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(this.getNutTypesCombo()));
    }

    private void refreshCropTypeCombo() {
        cropTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(this.getCropTypeCombo()));
    }

    /**
     * make the window appear in the appropriate thread
     * to be called from inside the main application frame
     *
     */
    public void displayWindow() {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new RecipiesWindow().setVisible(true);
            }
        });
    }
}
